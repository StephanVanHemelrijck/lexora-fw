generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uid              String           @id @unique
  nativeLanguage   String           @default("English")
  dailyMinutes     Int
  assessmentsTaken UserAssessment[]

  languageJourneys LanguageJourney[]
}

model LanguageJourney {
  id              String         @id @default(cuid())
  uid             String
  user            User           @relation(fields: [uid], references: [uid])
  languageId      String
  language        Language       @relation(fields: [languageId], references: [id])
  learningReasons String[]
  startingOption  StartingOption
  placementLevel  String?
  lastActivity    DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

enum StartingOption {
  scratch
  placement
}

model Assessment {
  id              String           @id @default(uuid())
  language        String
  questions       Json
  createdAt       DateTime         @default(now())
  userAssessments UserAssessment[]
}

model UserAssessment {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [uid])
  userId String

  assessment   Assessment @relation(fields: [assessmentId], references: [id])
  assessmentId String

  status      AssessmentStatus @default(PENDING)
  score       Int?
  level       String?
  createdAt   DateTime         @default(now())
  completedAt DateTime?
}

enum AssessmentStatus {
  PENDING
  COMPLETED
  CANCELED
}

model Language {
  id         String   @id @default(cuid())
  code       String   @unique
  name       String
  nativeName String
  isEnabled  Boolean  @default(true)
  sortOrder  Int
  flagEmoji  String?
  rtl        Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  languageJourneys LanguageJourney[]
}
